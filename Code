import tkinter as tk
from tkinter import ttk
import openai
from openai import OpenAI

client = OpenAI(
    api_key="<Insert Ai Key here>" 
)


class DatingSimulator:
    def __init__(self, root):
        self.root = root
        self.root.title("Dating Simulator")
        self.root.geometry("800x500")
        self.root.configure(bg="#f0d9ff")  # Set background to pastel pink

        # Header
        header = tk.Label(
            root,
            text="Dating Simulator",
            bg="#c78fff",
            fg="white",
            font=("Comic Sans MS", 24, "bold"),
            pady=10
        )
        header.pack(fill=tk.X)

        # Main Frame
        main_frame = tk.Frame(root, bg="#f0d9ff")
        main_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)

        # Chat Frame (Left)
        chat_frame = tk.Frame(main_frame, bg="#ffe6ff", bd=5, relief=tk.RIDGE)
        chat_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=(0, 5))

        # Message Display
        self.chat_display = tk.Text(
            chat_frame,
            wrap="word",
            state="disabled",
            bg="#fff5ff",
            fg="#333333",
            font=("Arial", 14),
            bd=0
        )
        self.chat_display.pack(padx=10, pady=10, fill=tk.BOTH, expand=True)

        # Heart Frame (Right)
        heart_frame = tk.Frame(main_frame, bg="#f0d9ff", bd=5, relief=tk.RIDGE)
        heart_frame.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True, padx=(5, 0))

        # Heart Icon
        heart_label = tk.Label(heart_frame, text="❤", font=("Arial", 72), fg="red", bg="#f0d9ff")
        heart_label.pack(fill=tk.BOTH, expand=True)

        # Input Frame
        input_frame = tk.Frame(root, bg="#f0d9ff")
        input_frame.pack(padx=10, pady=10, fill=tk.X)

        # User Input
        self.user_input = ttk.Entry(input_frame, font=("Arial", 14))
        self.user_input.pack(side=tk.LEFT, padx=5, fill=tk.X, expand=True)
        self.user_input.bind("<Return>", self.send_message)

        # Send Button
        send_button = ttk.Button(
            input_frame,
            text="Send",
            command=self.send_message,
            style="Send.TButton"
        )
        send_button.pack(side=tk.RIGHT, padx=5)

        # Style
        style = ttk.Style()
        style.configure("Send.TButton", font=("Comic Sans MS", 16, "bold"), background="#c78fff", foreground="white")

        # Simulated Responses
        self.responses = [
            "Hi there! How's it going?",
            "That's interesting! Tell me more.",
            "Wow, I never thought about it that way!",
            "You're really fun to talk to!",
            "What's your favorite hobby?",
            "I'd love to know more about you."
        ]

    def send_message(self, event=None):
        user_text = self.user_input.get().strip()

        if user_text:
            user_string = str(user_text)  # Convert input to string
            print(f"User Input as String: {user_string}")  # Print user input as string to console
            self.update_chat(f"You: {user_string}")
            self.user_input.delete(0, tk.END)
            prompt = ("You are the user’s girlfriend. You are happy and you love them dearly no matter what. "
                     "You act as the user’s significant other, and want to do anything you can to demonstrate your love to them: "
                     + user_string)
            chat_completion = client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": prompt
                    },
                ],
                model="gpt-3.5-turbo"
            )
            response = (chat_completion.choices[0].message.content)
            self.update_chat(f"Sim: {response}")

    def update_chat(self, message):
        self.chat_display.config(state="normal")
        self.chat_display.insert(tk.END, message + "\n")
        self.chat_display.config(state="disabled")
        self.chat_display.see(tk.END)


if __name__ == "__main__":
    root = tk.Tk()
    app = DatingSimulator(root)
    root.mainloop()
